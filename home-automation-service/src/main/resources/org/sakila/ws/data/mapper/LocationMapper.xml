<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'> 
<mapper namespace='org.sakila.ws.data.mapper.LocationMapper'>

	<select id="getLocationNames" resultMap="locationResult">
		SELECT `location_id` as locationId, `name` as locationName FROM location;
	</select>

	<select id="getLocationName" parameterType="string" resultMap="locationResult">
		SELECT `location_id` as locationId, `name` as locationName FROM location WHERE name = #{name};
	</select>

	<insert id="insertLocationName" parameterType="string">
		INSERT INTO location (`name`) VALUES (#{name});
	</insert>
	
	<delete id="deleteLocationName" parameterType="int">
		DELETE FROM location WHERE location_id = #{locationId};
	</delete>
	
	<select id="getThermometerLocations" resultMap="locationResult"> 
		SELECT tl.thermometer_location_id as thermometerLocationId,
			tl.location_id as locationId,
			l.name as locationName,
			tl.thermometerId from thermometer_location 
			tl inner join location l on tl.location_id = l.location_id
			where trash = 0;
	</select>
			
	<select id="getLocationByThermometerId" parameterType="int" resultMap="locationResult"> 
		SELECT tl.thermometer_location_id as thermometerLocationId, 
			tl.location_id as locationId,
			l.name as locationName,
			tl.thermometer_id as thermometerId
			from thermometer_location
			tl inner join location l on tl.location_id = l.location_id
			WHERE thermometer_id = #{thermometerId}
			AND trash = 0;
	</select>
			
	<insert id="insertThermometerLocation" parameterType="org.sakila.ws.data.Location">
		INSERT INTO 
			thermometer_location (location_id,thermometer_id,trash) 
		VALUES 
			(#{locationId},#{thermometerId},0);
	</insert>

	<select id="getThermometerLocationHistory" parameterType="org.sakila.ws.data.Location" resultMap="locationResult">
		SELECT thermometer_location_id as thermometerLocationId,
			location_id as locationId,
			thermometer_id as thermometerId
			FROM thermometer_location
			WHERE location_id = #{locationId}
			AND thermometer_id = #{thermometerId}
			AND trash = 1;
	</select>
			
	<select id="getThermometerLocation" parameterType="org.sakila.ws.data.Location" resultMap="locationResult">
		SELECT thermometer_location_id as thermometerLocationId,
			location_id as locationId,
			thermometer_id as thermometerId
			FROM thermometer_location
			WHERE location_id = #{locationId}
			AND thermometer_id = #{thermometerId}
			AND trash = #{trash};
	</select>
			
	<update id="trashThermometerLocation" parameterType="int">
		UPDATE thermometer_location SET trash = 1 WHERE thermometer_location_id = #{thermometerLocationId};
	</update>

	<delete id="deleteThermometerLocation" parameterType="int">
		DELETE FROM thermometer_location WHERE thermometer_location_id = #{thermometerLocationId};
	</delete>

	<delete id="deleteThermometerLocations">
		DELETE FROM thermometer_location;
	</delete>

	<resultMap type='org.sakila.ws.data.Location' id='locationResult'> 
		<id property='locationId' column='location_id'/> 
		<result property='thermometerLocationId' column='thermometer_location_id'/> 
		<result property='locationName' column='location_name'/> 
		<result property='thermometerId' column='thermometer_id'/> 
	</resultMap> 
</mapper>